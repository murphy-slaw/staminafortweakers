import org.jetbrains.changelog.Changelog

plugins {
    id 'multiloader-loader'
    id 'net.neoforged.moddev'
    id "me.modmuss50.mod-publish-plugin" version "0.8.4"
}

neoForge {
    version = neoforge_version
    // Automatically enable neoforge AccessTransformers if the file exists
    def at = project(':common').file('src/main/resources/META-INF/accesstransformer.cfg')
    if (at.exists()) {
        accessTransformers.from(at.absolutePath)
    }
    parchment {
        minecraftVersion = parchment_minecraft
        mappingsVersion = parchment_version
    }
    runs {
        configureEach {
            systemProperty('neoforge.enabledGameTestNamespaces', mod_id)
            ideName = "NeoForge ${it.name.capitalize()} (${project.path})" // Unify the run config names with fabric
        }
        client {
            client()
        }
        server {
            server()
        }
    }
    mods {
        "${mod_id}" {
            sourceSet sourceSets.main
        }
    }
    repositories {
        maven { url "https://maven.shedaniel.me/" }
        exclusiveContent {
            forRepository {
                maven {
                    name = "Modrinth"
                    url = "https://api.modrinth.com/maven"
                }
            }
            filter {
                includeGroup "maven.modrinth"
            }
        }
    }
    dependencies {
        api "me.shedaniel.cloth:cloth-config-neoforge:${cloth_config_version}"
        compileOnly("maven.modrinth:gliders:${gliders_version}")
        api("org.projectlombok:lombok:1.18.36")
        annotationProcessor("org.projectlombok:lombok:1.18.36")
    }
}

publishMods {
    file = jar.archiveFile
    type = STABLE
    modLoaders.add("neoforge")
    changelog = project.changelog.renderItem(project.changelog
            .getLatest()
            .withHeader(false)
            .withEmptySections(false),
            Changelog.OutputType.MARKDOWN
    )

    curseforge {
        projectId = "1040808"
        projectSlug = "stamina-for-tweakers" // Required for discord webhook
        accessToken = providers.environmentVariable("CURSEFORGE_TOKEN")
        minecraftVersions.add(project.minecraft_version)
        javaVersions.add(JavaVersion.VERSION_21)
        clientRequired = true
        serverRequired = true
        requires("cloth-config")
    }

    modrinth {
        projectId = "AejtfAlC"
        accessToken = providers.environmentVariable("MODRINTH_TOKEN")
        minecraftVersions.add(project.minecraft_version)
        requires("cloth-config")
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }