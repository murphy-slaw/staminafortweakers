plugins {
    id 'multiloader-loader'
    id 'net.neoforged.moddev.legacyforge'
}
jarJar.enabled(false)

mixin {
    add(sourceSets.main, "${mod_id}.refmap.json")

    config("${mod_id}.mixins.json")
}

legacyForge {
    version = "${minecraft_version}-${forge_version}"

    // LOL Forge AT Validation doesn't work
    validateAccessTransformers = false


    def at = project(':common').file('src/main/resources/META-INF/accesstransformer.cfg')
    if (at.exists()) {
        accessTransformers = ["src/main/resources/META-INF/accesstransformer.cfg"]
    }
    parchment {
        minecraftVersion = parchment_minecraft
        mappingsVersion = parchment_version
    }
    runs {
        client {
            client()
        }
        data {
            data()
            programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
        }
        server {
            server()
        }
    }

    mods {
        "${mod_id}" {
            sourceSet sourceSets.main
        }
    }

    tasks.named("jarJar"){
    }
}

sourceSets.main.resources.srcDir 'src/generated/resources'

repositories {
    maven { url "https://maven.shedaniel.me/" }
    maven { url = "https://repo.repsy.io/mvn/lucraft/threetag/"}
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
}

dependencies {
    compileOnly project(":common")
    implementation 'org.jetbrains:annotations:25.0.0'
    annotationProcessor("org.spongepowered:mixin:0.8.5-SNAPSHOT:processor")
    modApi("me.shedaniel.cloth:cloth-config-forge:${cloth_config_version}")
    modCompileOnly("maven.modrinth:gliders:${gliders_version}")
    modCompileOnly("net.threetag:PalladiumCore:${palladium_core_version}")
    api("org.projectlombok:lombok:1.18.36")
    annotationProcessor("org.projectlombok:lombok:1.18.36")
}


jar {
    finalizedBy('reobfJar')
    manifest.attributes([
            "MixinConfigs": "${mod_id}.mixins.json,${mod_id}.forge.mixins.json"
    ])
}